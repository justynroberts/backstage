apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: payment-orchestrator
  description: Distributed payment processing with PSP failover
  annotations:
    vault.io/psp-credentials: payment-secrets-v3
    sentry.io/project: payment-errors
    backstage.io/techdocs-ref: dir:./payment-system
    example.com/arch-decision: "ADR-001"
  links:
    - url: https://api-docs.example.com/payments
      title: API Documentation
      icon: api
  tags: [java, stripe, paypal]
spec:
  type: service
  lifecycle: production
  owner: payments-team
  system: payment-system
  providesApis: [payment-api]
  consumesApis: [fraud-api]
  dependencies:
    - component: fraud-detector
      type: dependsOn
    - component: order-orchestrator
      type: dependsOn
    - component: cart-service
      type: dependsOn
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: fraud-detector
  description: Real-time transaction risk analysis using ML
  annotations:
    sagemaker/model: fraud-model-v5
    kafka/topic: transactions-raw
    backstage.io/techdocs-ref: dir:./fraud-detector
  tags: [python, tensorflow, fintech]
spec:
  type: service
  lifecycle: production
  owner: security-team
  system: payment-system
  providesApis: [fraud-api]
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: order-orchestrator
  description: Distributed transaction coordinator for orders
  annotations:
    temporal/workflow: order-fulfillment
    redis/instance: order-state-01
    backstage.io/techdocs-ref: dir:./order-system
  tags: [c#, saga-pattern]
spec:
  type: service
  lifecycle: production
  owner: orders-team
  system: order-system
  dependencies:
    - component: payment-orchestrator
      type: dependsOn
    - component: inventory-sync
      type: dependsOn
    - component: fraud-detector
      type: dependsOn
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: cart-service
  description: Distributed shopping cart with Redis caching
  annotations:
    redis/instance: cart-cluster-01
    newrelic/apm: cart-service
    backstage.io/techdocs-ref: dir:./cart-service
  tags: [nodejs, redis]
spec:
  type: service
  lifecycle: production
  owner: checkout-team
  system: cart-system
  dependencies:
    - component: inventory-sync
      type: dependsOn
    - component: payment-orchestrator
      type: dependsOn
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: inventory-sync
  description: Real-time warehouse inventory synchronization
  annotations:
    aws/eventbridge: inventory-events
    warehouse/erp: sap-s4hana
    backstage.io/techdocs-ref: dir:./inventory
  tags: [go, kafka, aws]
spec:
  type: service
  lifecycle: production
  owner: logistics-team
  system: inventory-system
  consumesApis: [erp-api]
  dependencies:
    - component: erp-adapter
      type: dependsOn
    - component: order-orchestrator
      type: dependsOn
---
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: payment-system
  description: Payment processing and orchestration system
spec:
  owner: payments-team
---
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: order-system
  description: Order management and fulfillment system
spec:
  owner: orders-team
---
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: cart-system
  description: Shopping cart and checkout system
spec:
  owner: checkout-team
---
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: inventory-system
  description: Warehouse and inventory management system
spec:
  owner: logistics-team
---
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: payments-team
  description: Payments engineering team
spec:
  type: team
  profile:
    displayName: Payments Team
    email: payments-team@example.com
  members:
    - user: alice
    - user: bob
---
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: orders-team
  description: Order management team
spec:
  type: team
  profile:
    displayName: Orders Team
    email: orders-team@example.com
  members:
    - user: charlie
    - user: dave
---
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: checkout-team
  description: Checkout and cart service team
spec:
  type: team
  profile:
    displayName: Checkout Team
    email: checkout-team@example.com
  members:
    - user: eve
    - user: frank
---
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: logistics-team
  description: Logistics and warehouse management team
spec:
  type: team
  profile:
    displayName: Logistics Team
    email: logistics-team@example.com
  members:
    - user: grace
    - user: hank
